
      # (NEW) OWNER이면 필요한 라벨 자동 준비 + 부착
      - name: Ensure required labels for OWNER
        if: ${{ github.event.comment.author_association == 'OWNER' }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = context.payload.issue?.number || context.payload.pull_request?.number;
            const need = ["ak:enabled","ak:night-override"];
            for (const name of need) {
              try { await github.rest.issues.getLabel({owner, repo, name}); }
              catch { await github.rest.issues.createLabel({owner, repo, name, color: name==='ak:enabled'?'0ea5e9':'f59e0b'}); }
            }
            const {data: labels} = await github.rest.issues.listLabelsOnIssue({owner, repo, issue_number: pr});
            if (!labels.some(l => l.name.toLowerCase()==='ak:enabled')) {
              await github.rest.issues.addLabels({owner, repo, issue_number: pr, labels:['ak:enabled']});
            }

      # (NEW) apply는 OWNER만 실행
      - name: Guard apply — OWNER only
        if: ${{ (steps.parse.outputs.cmd == 'fixloop' || steps.parse.outputs.cmd == 'rewrite') && contains(steps.parse.outputs.args, 'apply') && github.event.comment.author_association != 'OWNER' }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = context.payload.issue?.number || context.payload.pull_request?.number;
            await github.rest.issues.createComment({
              owner, repo, issue_number: pr,
              body: "⛔ `apply` 는 **OWNER 전용**입니다. 미리보기는 `/ak fixloop preview` 를 사용하세요."
            });
      - name: Short-circuit when not owner for apply
        if: ${{ (steps.parse.outputs.cmd == 'fixloop' || steps.parse.outputs.cmd == 'rewrite') && contains(steps.parse.outputs.args, 'apply') && github.event.comment.author_association != 'OWNER' }}
        run: exit 0
