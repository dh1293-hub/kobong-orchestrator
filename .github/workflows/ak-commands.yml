name: ak-commands

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  run-ak:
    if: ${{ contains(github.event.comment.body, '/ak ') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse command
        id: parse
        run: |
          body="${{ github.event.comment.body }}"
          # /ak <cmd> 만 추출 (소문자/숫자/하이픈)
          cmd=$(echo "$body" | sed -nE 's@.*\/ak[[:space:]]+([a-z0-9\-]+).*@\1@p')
          echo "cmd=$cmd" >> $GITHUB_OUTPUT

      - name: Reply with help (links)
        if: steps.parse.outputs.cmd == 'help'
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = context.payload.issue?.number || context.payload.pull_request?.number;
            const lines = [
              "### AK 명령 도움말",
              "- `/ak test` — 테스트 체크런 실행",
              "- `/ak scan --all` — 전체 스캔 보고서",
              "- `/ak fixloop preview` → `/ak fixloop apply` — 패치 미리보기/적용",
              "- `/ak rewrite` — 코드 제안(서제스트)",
              "",
              "> 로그/종료코드·롤백 규칙은 프로젝트 표준(PS7·KLC·URS)을 따릅니다."
            ];
            await github.rest.issues.createComment({ owner, repo, issue_number: pr, body: lines.join("\n") });

      - name: Short-circuit when help
        if: steps.parse.outputs.cmd == 'help'
        run: echo "help replied" && exit 0

      - name: Run KO via PS7
        shell: pwsh
        run: |
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 `
            -Command "${{ steps.parse.outputs.cmd }}" `
            -Sha "${{ github.sha }}" `
            -Pr "${{ github.event.issue.number || github.event.pull_request.number }}"
