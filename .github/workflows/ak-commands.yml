name: ak-commands
on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  checks: write
  issues: write

concurrency:
  group: ak-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  run-ak:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/ak ') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head
          fetch-depth: 1

      - name: Parse command
        id: parse
        run: |
          body=$(printf "%s" '${{ github.event.comment.body }}')
          cmd=$(printf "%s" "$body" | sed -n 's!.*/ak[[:space:]]\+\([a-z0-9-]\+\).*!\1!p')
          echo "cmd=$cmd" >> "$GITHUB_OUTPUT"

      - name: Dispatch
        shell: pwsh
        run: |
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 `
            -Command "${{ steps.parse.outputs.cmd }}" `
            -Sha "${{ github.sha }}" `
            -Pr "${{ github.event.issue.number }}"

      - name: Reply with Run/Link
        uses: actions/github-script@v7
        with:
          script: |
            const cmd = "${{ steps.parse.outputs.cmd }}";
            const sha = "${{ github.sha }}".slice(0,7);
            const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: `\`/ak ${cmd}\` accepted on **${sha}** â†’ [run logs](${url})`
            });

      - name: Upload ak logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ak7-logs
          path: logs/ak7.jsonl
          if-no-files-found: warn
          retention-days: 5
