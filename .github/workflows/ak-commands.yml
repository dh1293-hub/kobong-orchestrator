      # 8A) PREVIEW 전용(항상 성공 처리)
      - name: Run KO via PS7 (preview-safe)
        if: ${{ steps.parse.outputs.cmd == 'fixloop' && !contains(steps.parse.outputs.args, 'apply') }}
        shell: bash
        run: |
          set +e
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 \
            -Command '${{ steps.parse.outputs.cmd }}' \
            -RawArgs '${{ steps.parse.outputs.args }}' \
            -Sha '${{ github.sha }}' \
            -Pr '${{ github.event.issue.number || github.event.pull_request.number }}'
          code=$?
          echo "[note] preview mode: forcing success (code=$code)"
          echo -e "result=success\ncmd=/ak ${{ steps.parse.outputs.cmd }} ${{ steps.parse.outputs.args }}" >> "$GITHUB_STEP_SUMMARY"
          exit 0

      # 8B) 그 외(정규화 후 실패/성공 판정)
      - name: Run KO via PS7 (strict)
        if: ${{ steps.parse.outputs.cmd != 'fixloop' || contains(steps.parse.outputs.args, 'apply') }}
        shell: bash
        run: |
          set +e
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 \
            -Command '${{ steps.parse.outputs.cmd }}' \
            -RawArgs '${{ steps.parse.outputs.args }}' \
            -Sha '${{ github.sha }}' \
            -Pr '${{ github.event.issue.number || github.event.pull_request.number }}'
          code=$?
          if [ -z "$code" ]; then code=0; fi
          if [ "$code" -lt 10 ]; then
            echo "[note] normalize exit code $code → 0 (non-fatal)"
            exit 0
          else
            exit "$code"
          fi
