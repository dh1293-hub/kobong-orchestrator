name: ak-commands

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      pr:
        description: PR number
        required: true
      command:
        description: AK command
        required: true
        type: choice
        options: [scan, test, rewrite, fixloop]

permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: write

concurrency:
  group: ak-${{ github.event_name == 'workflow_dispatch' && inputs.pr || github.event.issue.number }}-${{ github.event_name == 'workflow_dispatch' && inputs.command || 'cmd' }}
  cancel-in-progress: false

jobs:
  run-ak:
    runs-on: ubuntu-24.04
    steps:
      - name: Resolve inputs
        id: resolve
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "pr=${{ inputs.pr }}" >> "$GITHUB_OUTPUT"
            echo "cmd=${{ inputs.command }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          body=$(printf "%s" "${{ github.event.comment.body }}")
          cmd=$(printf "%s" "$body" | sed -n 's!.*/ak[[:space:]]\+\([a-z0-9-]\+\).*!\1!p')
          echo "pr=${{ github.event.issue.number }}" >> "$GITHUB_OUTPUT"
          echo "cmd=$cmd" >> "$GITHUB_OUTPUT"

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: refs/pull/${{ steps.resolve.outputs.pr }}/head
          fetch-depth: 1

      - name: Bootstrap ak logs
        run: |
          mkdir -p logs
          printf '{"timestamp":"%s","level":"INFO","action":"bootstrap","message":"init"}\n' "$(date -Iseconds)" >> logs/ak7.jsonl

      - name: Hydrate scripts from main if missing
        shell: bash
        run: |
          if [ ! -d scripts/g5 ] || [ ! -f scripts/g5/ak-dispatch.ps1 ]; then
            echo "::notice::scripts/g5 missing; hydrating from origin/main"
            git fetch --depth=1 origin main
            git checkout origin/main -- scripts/g5/
          fi
          ls -la scripts/g5

      - name: Dispatch
        shell: pwsh
        run: |
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 `
            -Command "${{ steps.resolve.outputs.cmd }}" `
            -Sha "${{ github.sha }}" `
            -Pr "${{ steps.resolve.outputs.pr }}"

      - name: List ak logs (debug)
        if: always()
        run: |
          echo "::group::ls -la logs"; ls -la logs || true; echo "::endgroup::"
          echo "::group::tail logs/ak7.jsonl"; tail -n +1 logs/ak7.jsonl || true; echo "::endgroup::"

      - name: Upload ak logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ak7-logs
          path: logs/ak7.jsonl
          retention-days: 5

      - name: Comment back (optional)
        if: ${{ github.event_name == 'issue_comment' || github.event_name == 'workflow_dispatch' }}
        uses: actions/github-script@v7
        with:
          script: |
            const pr = '${{ steps.resolve.outputs.pr }}';
            const cmd = '${{ steps.resolve.outputs.cmd }}';
            const url = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const body = `âœ… /ak **${cmd}** started for PR #${pr}\n\nRun: ${url}`;
            if (context.eventName === 'issue_comment') {
              await github.rest.issues.createComment({ ...context.repo, issue_number: Number(pr), body });
            } else {
              core.summary.addHeading('/ak').addRaw(body).write();
            }

