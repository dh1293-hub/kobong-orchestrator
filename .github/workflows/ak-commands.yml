name: ak-commands
on:
  issue_comment:
    types: [created]
permissions:
  contents: read
  pull-requests: write
  issues: write
jobs:
  ak:
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/ak') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Echo context
        shell: bash
        run: |
          echo "::group::Context"
          echo "actor=${{ github.actor }}"
          echo "repo=${{ github.repository }}"
          echo "event=${{ github.event_name }}"
          echo "pr=${{ github.event.issue.number }}"
          echo "comment=${{ github.event.comment.body }}"
          echo "::endgroup::"

      - name: Parse + Run (self-contained)
        id: run
        shell: bash
        run: |
          set -euo pipefail
          body="${{ github.event.comment.body }}"
          cmd=$(awk '{print $2}' <<<"$body")
          case "$cmd" in
            scan|test|help) ;;
            *) cmd=scan ;;
          esac
          echo "cmd=$cmd" >> "$GITHUB_OUTPUT"
          echo "::notice::ak $cmd start"
          # 이 자리에 실제 동작을 연결하면 됨. 우선 체커로 OK만 출력.
          echo "ak-$cmd ok"

      - name: Comment back
        if: ${{ always() }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          num=${{ github.event.issue.number }}
          concl=${{ job.status }}
          cmd=${{ steps.run.outputs.cmd }}
          msg="✅ ak-commands: **/ak $cmd** → $concl (run:${{ github.run_id }})"
          echo "result=$concl" >> "$GITHUB_STEP_SUMMARY"
          echo "cmd=/ak $cmd" >> "$GITHUB_STEP_SUMMARY"
          curl -s -H "Authorization: token $GH_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               -d "{\"body\":\"$msg\"}" \
               https://api.github.com/repos/${{ github.repository }}/issues/$num/comments >/dev/null