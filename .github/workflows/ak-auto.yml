name: ak-auto

on:
  pull_request_target:
    types: [labeled, opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      pr:
        description: "PR number to run on"
        required: false
        type: string

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  auto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # PR Î≤àÌò∏ Í≤∞Ï†ï
      - name: Resolve PR number
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = core.getInput('pr') || context.payload.pull_request?.number || context.payload.issue?.number;
            if(!pr) core.setFailed('No PR number'); else core.setOutput('num', String(pr));

      # ak:auto ÎùºÎ≤® ÌôïÏù∏(ÏóÜÏúºÎ©¥ ÏïàÎÇ¥ ÌõÑ Ï¢ÖÎ£å)
      - name: Check ak:auto present
        id: gate
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = Number('${{ steps.pr.outputs.num }}');
            const {data: labels} = await github.rest.issues.listLabelsOnIssue({owner, repo, issue_number: pr});
            const ok = labels.some(l => l.name.toLowerCase()==='ak:auto');
            if(!ok){
              await github.rest.issues.createComment({
                owner, repo, issue_number: pr,
                body: "üîî ÏûêÎèô Ïã§Ìñâ ÎùºÎ≤® **`ak:auto`** Í∞Ä ÏóÜÏñ¥ ÎåÄÍ∏∞Ìï©ÎãàÎã§. ÎùºÎ≤® Ï∂îÍ∞Ä ÌõÑ ÏûêÎèôÏúºÎ°ú Ïã§ÌñâÎê©ÎãàÎã§."
              });
            }
            core.setOutput('enabled', ok ? 'true' : 'false');

      - name: Short-circuit when ak:auto missing
        if: steps.gate.outputs.enabled != 'true'
        run: exit 0

      # ÏïàÎÇ¥ ÏΩîÎ©òÌä∏
      - name: Announce start
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = Number('${{ steps.pr.outputs.num }}');
            await github.rest.issues.createComment({
              owner, repo, issue_number: pr,
              body: "ü§ñ **AUTO-Kobong**: Help ‚Üí Test ‚Üí Scan ‚Üí Preview ÏàúÏÑúÎ°ú Ï†ÑÏûêÎèô Ïã§ÌñâÌï©ÎãàÎã§. (DEV: 24h apply ÌóàÏö©, OWNER Ï†ÑÏö©)"
            });

      # ===== ÏãúÌÄÄÏä§ =====
      - name: /ak help
        shell: bash
        run: |
          set +e
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 -Command 'help' -Pr '${{ steps.pr.outputs.num }}'
          exit 0

      - name: /ak test
        shell: bash
        run: |
          set +e
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 -Command 'test' -Pr '${{ steps.pr.outputs.num }}'
          code=$?; if [ -z "$code" ]; then code=0; fi
          if [ "$code" -ge 10 ]; then exit "$code"; else exit 0; fi

      - name: /ak scan --all
        shell: bash
        run: |
          set +e
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 -Command 'scan' -RawArgs '--all' -Pr '${{ steps.pr.outputs.num }}'
          code=$?; if [ -z "$code" ]; then code=0; fi
          if [ "$code" -ge 10 ]; then exit "$code"; else exit 0; fi

      - name: /ak fixloop preview (always green)
        shell: bash
        continue-on-error: true
        run: |
          set +e
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 -Command 'fixloop' -RawArgs 'preview' -Pr '${{ steps.pr.outputs.num }}' || true
          exit 0

      # ===== Ï°∞Í±¥Î∂Ä apply (DEV: 24h ÌóàÏö©) =====
      - name: Decide apply
        id: apply
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = Number('${{ steps.pr.outputs.num }}');
            const {data: labels} = await github.rest.issues.listLabelsOnIssue({owner, repo, issue_number: pr});
            const applyLabel = labels.some(l => l.name.toLowerCase()==='ak:auto-apply');
            // DEV: ÏïºÍ∞Ñ Ï†úÌïú Ï†úÍ±∞ ‚Üí ÎùºÎ≤®Îßå ÏûàÏúºÎ©¥ Ïã§Ìñâ
            core.setOutput('do', applyLabel ? 'true' : 'false');
            core.setOutput('night','false')

      - name: Night notice
        if: ${{ false }}
        run: echo "DEV mode: night guard disabled"

      - name: /ak fixloop apply (OWNER only)
        if: ${{ steps.apply.outputs.do == 'true' && github.actor == github.repository_owner }}
        shell: bash
        run: |
          set +e
          pwsh -NoLogo -NoProfile -File scripts/g5/ak-dispatch.ps1 -Command 'fixloop' -RawArgs 'apply' -Pr '${{ steps.pr.outputs.num }}'
          code=$?; if [ -z "$code" ]; then code=0; fi
          if [ "$code" -ge 10 ]; then exit "$code"; else exit 0; fi

      # ÏöîÏïΩ ÎåìÍ∏Ä
      - name: Comment summary
        if: always()
        uses: actions/github-script@v7
        env:
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          CHECKS_URL: ${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.pr.outputs.num }}/checks
          STATUS: ${{ job.status }}
          KB_URL: ${{ github.server_url }}/${{ github.repository }}/blob/main/.kobong/reports/ERROR-KB.md
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = Number('${{ steps.pr.outputs.num }}');
            const body = [
              `**AUTO-Kobong** finished: **${process.env.STATUS.toUpperCase()}**`,
              `- Actions Run: ${process.env.RUN_URL}`,
              `- PR Checks  : ${process.env.CHECKS_URL}`,
              `- Error KB   : ${process.env.KB_URL}`
            ].join("\n");
            await github.rest.issues.createComment({ owner, repo, issue_number: pr, body });
