name: z12-ak-exec-mini

on:
  issue_comment:
    types: [created]        # 댓글 달리면 무조건 뜸 (PR 대화 댓글도 포함)

permissions:
  contents: read
  issues: write

jobs:
  exec:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # 1) /ak 감지 + 이슈 번호 확보 (초간단, 이슈/PR 대화 댓글 커버)
      - id: gate
        shell: pwsh
        run: |
          $body = @"
          ${{ github.event.comment.body }}
          "@.Trim()
          if ($body -match '(?is)(^|[\s`>])/ak(\b|[\s`])') { $isAK='1' } else { $isAK='0' }
          "isAK=$isAK"                              | Out-File $env:GITHUB_OUTPUT -Append
          "issue=${{ github.event.issue.number }}"  | Out-File $env:GITHUB_OUTPUT -Append
          "body=$body"                              | Out-File $env:GITHUB_OUTPUT -Append
          New-Item -ItemType File -Force .ak-out.txt | Out-Null

      # 2) ACK
      - name: ack
        if: ${{ steps.gate.outputs.isAK == '1' && steps.gate.outputs.issue != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              issue_number: Number(${{ steps.gate.outputs.issue }}),
              body: `ack ✅ ${{ toJson(steps.gate.outputs.body) }}`
            });

      # 3) 실제 실행(데모: PowerShell 한 줄 + 로그 생성)
      - name: run
        if: ${{ steps.gate.outputs.isAK == '1' }}
        shell: pwsh
        run: |
          "hello from z12" | Tee-Object .ak-out.txt -Append

      # 4) tail
      - name: tail
        if: ${{ steps.gate.outputs.isAK == '1' && steps.gate.outputs.issue != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
        script: |
          const fs = require('fs');
          let tail='(no .ak-out.txt)'; try { tail = fs.readFileSync('.ak-out.txt','utf8').split('\n').slice(-50).join('\n'); } catch {}
          await github.rest.issues.createComment({
            owner: context.repo.owner, repo: context.repo.repo,
            issue_number: Number(${{ steps.gate.outputs.issue }}),
            body: `✅ exec done (z12)\n\n\`\`\`\n${tail}\n\`\`\``
          });
