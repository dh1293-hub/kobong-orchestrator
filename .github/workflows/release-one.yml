name: Release One-Click

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'vX.Y.Z (e.g. v1.0.0)'
        required: true
      notes:
        description: 'Release notes (optional)'
        required: false
        default: ''
      auto_bump:
        description: 'If tag exists, bump patch automatically'
        required: false
        default: 'false'
      canary:
        description: 'Run canary smoke after release'
        required: false
        default: 'false'

permissions:
  contents: write

concurrency:
  group: release-one-click
  cancel-in-progress: false

jobs:
  gates:
    name: Pre-release gates (ak-scan / ak-test DRYRUN)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run ak-scan.ps1 if present
        shell: pwsh
        run: |
          $ErrorActionPreference='Continue'
          $p = 'scripts/g5/ak-scan.ps1'
          if (Test-Path $p) { & pwsh -NoProfile -File $p -WhatIf 2>&1 | Tee-Object .ak-gates.txt }
          else { "skip: $p not found" | Tee-Object .ak-gates.txt }
      - name: Run ak-test.ps1 if present
        shell: pwsh
        run: |
          $ErrorActionPreference='Continue'
          $p = 'scripts/g5/ak-test.ps1'
          if (Test-Path $p) { & pwsh -NoProfile -File $p -WhatIf 2>&1 | Tee-Object -Append .ak-gates.txt }
          else { "skip: $p not found" | Tee-Object -Append .ak-gates.txt }
      - name: Upload gate logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-gates-logs
          path: .ak-gates.txt
          if-no-files-found: ignore

  release:
    name: Create tag & publish release (API-only)
    needs: gates
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.validate.outputs.version }}
    steps:
      - name: Validate version & uniqueness (API)
        id: validate
        uses: actions/github-script@v7
        env:
          VERSION:   ${{ inputs.version }}
          AUTO_BUMP: ${{ inputs.auto_bump }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let ver = process.env.VERSION;
            const auto = (process.env.AUTO_BUMP || '').toLowerCase() === 'true';
            if (!ver) { core.setFailed('version input missing'); return; }
            if (!/^v\d+\.\d+\.\d+$/.test(ver)) { core.setFailed(`bad version: ${ver}`); return; }
            async function tagExists(tag) {
              try {
                await github.rest.git.getRef({ owner: context.repo.owner, repo: context.repo.repo, ref: `tags/${tag}` });
                return true;
              } catch (e) { if (e.status === 404) return false; throw e; }
            }
            if (await tagExists(ver)) {
              if (!auto) { core.setFailed(`tag already exists: ${ver}`); return; }
              const m = ver.match(/^v(\d+)\.(\d+)\.(\d+)$/);
              let [maj,min,pat] = [parseInt(m[1]),parseInt(m[2]),parseInt(m[3])];
              while (true) { pat++; const cand=`v${maj}.${min}.${pat}`; if (!(await tagExists(cand))) { ver=cand; break; } }
              core.notice(`auto-bump -> ${ver}`);
            }
            core.exportVariable('VERSION', ver);
            core.setOutput('version', ver)

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env: { GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        with:
          tag_name:         ${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          body:             ${{ inputs.notes }}
          generate_release_notes: true

  canary:
    name: Post-release canary
    needs: release
    if: ${{ inputs.canary == 'true' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run ak-test.ps1 (best-effort)
        shell: pwsh
        run: |
          $ErrorActionPreference='Continue'
          $p = 'scripts/g5/ak-test.ps1'
          if (Test-Path $p) { & pwsh -NoProfile -File $p 2>&1 | Tee-Object .ak-canary.txt }
          else { "skip: $p not found" | Tee-Object .ak-canary.txt }
      - name: Upload canary logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: canary-logs
          path: .ak-canary.txt
          if-no-files-found: ignore
