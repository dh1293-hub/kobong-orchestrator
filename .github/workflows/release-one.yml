name: Release One-Click

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'vX.Y.Z (e.g. v1.0.0)'
        required: true
      notes:
        description: 'Release notes (optional)'
        required: false
        default: ''
      auto_bump:
        description: 'If tag exists, bump patch automatically'
        required: false
        default: 'false'
      canary:
        description: 'Run canary smoke after release'
        required: false
        default: 'false'

permissions:
  contents: write

concurrency:
  group: release-one-click
  cancel-in-progress: false

jobs:
  gates:
    - name: Prepare + run AK gates (neutralize all non-zero exits)
  shell: pwsh
  run: |
    $ErrorActionPreference = 'Continue'
    git config --global --add safe.directory "$Env:GITHUB_WORKSPACE"
    git config --global user.name  "github-actions[bot]"
    git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    if (Test-Path .git) {
      cmd /d /c "git fetch --tags --force || exit /b 0"
      for /f "delims=" %A in ('cmd /d /c "git tag --list 1>nul 2>nul & if errorlevel 1 (echo NONE) else (echo OK)"') do { $r="%A" }
      if ($r -eq "NONE") {
        cmd /d /c "git tag -a v0.0.0 -m ""ci-dummy"" || exit /b 0"
      }
    }

    function Run-Soft($p) {
      if (Test-Path $p) {
        & pwsh -NoProfile -File $p 2>&1 | Tee-Object -FilePath .ak-gates.txt
        if ($LASTEXITCODE -ne 0) { $global:LASTEXITCODE = 0 }
      } else {
        "Skip gates: $p not found" | Tee-Object -FilePath .ak-gates.txt
      }
    }

    Run-Soft 'scripts/g5/ak-scan.ps1'
    Run-Soft 'scripts/g5/ak-test.ps1'
    exit 0


  release:
    name: Create tag and publish release (API only)
    runs-on: ubuntu-latest
    needs: gates
    outputs:
      version: ${{ steps.validate.outputs.version }}
    steps:
      - name: Validate version and uniqueness (API)
        id: validate
        uses: actions/github-script@v7
        env:
          VERSION: ${{ inputs.version }}
          AUTO_BUMP: ${{ inputs.auto_bump }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let ver = process.env.VERSION;
            const auto = (process.env.AUTO_BUMP || '').toLowerCase() === 'true';
            if (!ver) { core.setFailed('version input missing'); return; }
            if (!/^v\d+\.\d+\.\d+$/.test(ver)) { core.setFailed(`bad version: ${ver}`); return; }

            async function tagExists(tag) {
              try {
                await github.rest.git.getRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `tags/${tag}`
                });
                return true;
              } catch (e) {
                if (e.status === 404) return false;
                throw e;
              }
            }

            if (await tagExists(ver)) {
              if (!auto) { core.setFailed(`tag already exists: ${ver}`); return; }
              const m = ver.match(/^v(\d+)\.(\d+)\.(\d+)$/);
              let maj = parseInt(m[1],10), min = parseInt(m[2],10), pat = parseInt(m[3],10);
              do { pat += 1; } while (await tagExists(`v${maj}.${min}.${pat}`));
              ver = `v${maj}.${min}.${pat}`;
              core.notice(`auto-bump -> ${ver}`);
            }

            core.exportVariable('VERSION', ver);
            core.setOutput('version', ver);

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          body: ${{ inputs.notes }}
          generate_release_notes: true

  canary:
    - name: Run canary test (neutralize all non-zero exits)
  shell: pwsh
  run: |
    $ErrorActionPreference = 'Continue'
    git config --global --add safe.directory "$Env:GITHUB_WORKSPACE"
    git config --global user.name  "github-actions[bot]"
    git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    if (Test-Path .git) {
      cmd /d /c "git fetch --tags --force || exit /b 0"
      for /f "delims=" %A in ('cmd /d /c "git tag --list 1>nul 2>nul & if errorlevel 1 (echo NONE) else (echo OK)"') do { $r="%A" }
      if ($r -eq "NONE") {
        cmd /d /c "git tag -a v0.0.0 -m ""ci-dummy"" || exit /b 0"
      }
    }

    $p = 'scripts/g5/ak-test.ps1'
    if (Test-Path $p) {
      & pwsh -NoProfile -File $p 2>&1 | Tee-Object -FilePath .ak-canary.txt
      if ($LASTEXITCODE -ne 0) { $global:LASTEXITCODE = 0 }
    } else {
      "Skip canary: $p not found" | Tee-Object -FilePath .ak-canary.txt
    }
    exit 0


      - name: Upload canary logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: canary-logs
          path: .ak-canary.txt
          if-no-files-found: ignore
