# (상단 on/permissions/concurrency는 그대로 유지)

jobs:
  gates:                               # ⬅ 추가
    name: Pre-release gates (optional AK scan/test)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run pre-release AK gates
        shell: pwsh
        run: |
          $ErrorActionPreference='Stop'
          function Try-Run($p){
            if (Test-Path $p) {
              Write-Host "==> $p"
              & pwsh -NoProfile -File $p -WhatIf
              if ($LASTEXITCODE -ne 0) { throw "gate failed: $p ($LASTEXITCODE)" }
            } else {
              Write-Host "skip: $p (not found)"
            }
          }
          Try-Run 'scripts/g5/ak-scan.ps1'
          Try-Run 'scripts/g5/ak-test.ps1'
      - name: Upload gate logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pre-gates
          path: ./*.log
          if-no-files-found: ignore

  release:
    name: Create tag & publish release (API-only)
    runs-on: ubuntu-latest
    needs: gates                    # ⬅ 이 한 줄만 추가
    outputs:
      version: ${{ steps.validate.outputs.version }}
    steps:
      - name: Validate version & uniqueness (API)
        id: validate
        uses: actions/github-script@v7
        env:
          VERSION:   ${{ inputs.version }}
          AUTO_BUMP: ${{ inputs.auto_bump }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let ver = process.env.VERSION;
            const auto = (process.env.AUTO_BUMP || '').toLowerCase() === 'true';
            if (!ver) { core.setFailed('version input missing'); return; }
            if (!/^v\d+\.\d+\.\d+$/.test(ver)) { core.setFailed(`bad version: ${ver}`); return; }
            async function tagExists(tag){
              try{ await github.rest.git.getRef({owner:context.repo.owner,repo:context.repo.repo,ref:`tags/${tag}`}); return true; }
              catch(e){ if(e.status===404) return false; throw e; }
            }
            if (await tagExists(ver)) {
              if (!auto) { core.setFailed(`tag already exists: ${ver}`); return; }
              const m = ver.match(/^v(\d+)\.(\d+)\.(\d+)$/);
              let [maj,min,pat]=[+m[1],+m[2],+m[3]];
              while (await tagExists(`v${maj}.${min}.${++pat}`)) {}
              ver = `v${maj}.${min}.${pat}`;
              core.notice(`auto-bump -> ${ver}`);
            }
            core.exportVariable('VERSION', ver);
            core.setOutput('version', ver);

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env: { GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        with:
          tag_name:         ${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          body:             ${{ inputs.notes }}
          generate_release_notes: true

  canary:
    name: Post-release canary
    needs: release
    if: ${{ inputs.canary == 'true' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run ak-test.ps1 if present
        shell: pwsh
        run: |
          $ErrorActionPreference='Continue'
          $p = 'scripts/g5/ak-test.ps1'
          if (Test-Path $p) { & pwsh -NoProfile -File $p 2>&1 | Tee-Object .ak-canary.txt }
          else { "Skip canary: $p not found" | Tee-Object .ak-canary.txt }
      - name: Upload canary logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: canary-logs
          path: .ak-canary.txt
          if-no-files-found: ignore
