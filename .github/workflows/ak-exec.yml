name: AK7 exec (stable)

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write

jobs:
  exec:
    # PR 대화 + /ak 로 시작하는 댓글만 실행
    if: >
      github.event.issue.pull_request &&
      github.event.comment.user.login != 'github-actions' &&
      startsWith(github.event.comment.body, '/ak')
    runs-on: windows-latest

    steps:
      - name: Resolve PR head
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            });
            core.setOutput('headSha', pr.data.head.sha);
            core.setOutput('headLabel', pr.data.head.label);

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.headSha }}
          fetch-depth: 1
          submodules: false
          persist-credentials: false

      - name: Exec loader (PowerShell)
        id: exec
        shell: pwsh
        continue-on-error: true   # git 경고를 실패로 보지 않음
        run: |
          $body = '${{ github.event.comment.body }}'.Trim()
          # 명령어 추출: "/ak scan" -> "scan"
          $cmd = ($body -replace '^/ak\s*', '').Trim().Split(' ')[0]
          if ([string]::IsNullOrWhiteSpace($cmd)) { $cmd = 'scan' }

          $candidates = @(
            "scripts\g5\ak-$cmd.ps1",
            "scripts\g5\ak-scan.ps1"   # 폴백
          )
          $found = $candidates | Where-Object { Test-Path $_ } | Select-Object -First 1

          $prHead = "${{ steps.pr.outputs.headLabel }} (${{ steps.pr.outputs.headSha }})"
          $msg = @()
          $msg += ">> PR head: $prHead"
          $msg += ">> Candidate(s): " + ($candidates -join ', ')
          if ($found) {
            $msg += ">> Running $found"
            Write-Host ($msg -join "`n")
            try {
              & $found
            } catch {
              Write-Host "script error: $($_.Exception.Message)"
              exit 1
            }
          } else {
            $msg += ">> No script found. Nothing to do."
            Write-Host ($msg -join "`n")
          }

      - name: Comment - exec done
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: "✅ exec done"
            })
