name: AK7 exec (stable)

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

concurrency:
  group: ak-exec-${{ github.event.issue.number }}
  cancel-in-progress: true

env:
  SCRIPTS_DIR: scripts\g5

jobs:
  exec:
    # /ak 로 시작하는 댓글에만 반응
    if: startsWith(github.event.comment.body, '/ak ')
    runs-on: windows-latest

    steps:
      - name: Parse command & gate
        id: gate
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.comment.body.trim()
            const m = body.match(/^\/ak\s+(\w+)/i)
            const cmd = (m && m[1]) ? m[1].toLowerCase() : 'scan'
            const isPR = !!context.payload.issue.pull_request
            core.setOutput('cmd', cmd)
            core.setOutput('isPR', isPR ? '1' : '0')

      # PR이 아니면 실행 자체를 스킵 (성공으로 종료)
      - name: Not a PR, skip
        if: steps.gate.outputs.isPR != '1'
        run: echo "skip"

      - name: Checkout PR head
        if: steps.gate.outputs.isPR == '1'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.head.sha }}
          fetch-depth: 0
          persist-credentials: false

      - name: Avoid git safe dir warning (best-effort)
        if: steps.gate.outputs.isPR == '1'
        shell: pwsh
        run: |
          git config --global --add safe.directory "$Env:GITHUB_WORKSPACE" || echo "safe.dir warn"

      - name: Run AK script
        if: steps.gate.outputs.isPR == '1'
        id: run
        shell: pwsh
        run: |
          $cmd = '${{ steps.gate.outputs.cmd }}'
          $map = @{
            "scan"     = "ak-scan.ps1"
            "fix"      = "ak-fixloop.ps1"
            "test"     = "ak-test.ps1"
            "rewrite"  = "ak-rewrite.ps1"
            "dispatch" = "ak-dispatch.ps1"
          }
          if (-not $map.ContainsKey($cmd)) { $cmd = 'scan' }
          $file = Join-Path "${{ env.SCRIPTS_DIR }}" $map[$cmd]
          if (-not (Test-Path $file)) { throw "AK script not found: $file" }

          Write-Host "Candidate(s): $file"
          Write-Host "Running $file"
          & $file

      - name: exec done
        if: steps.gate.outputs.isPR == '1'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: "✅ exec done"
            });
