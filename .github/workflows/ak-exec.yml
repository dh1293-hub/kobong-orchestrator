name: AK7 exec (stable)

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  exec:
    if: startsWith(github.event.comment.body, '/ak ')
    runs-on: windows-latest

    steps:
      - name: Gate
        id: gate
        shell: pwsh
        run: |
          $body='${{ github.event.comment.body }}'.Trim()
          $parts=$body.Split(' ')
          $cmd = if ($parts.Length -ge 2) { $parts[1].ToLower() } else { 'scan' }
          $isPR = [int]([bool]${{ github.event.issue.pull_request != null }})
          echo "body=$body" >> $env:GITHUB_OUTPUT
          echo "cmd=$cmd"   >> $env:GITHUB_OUTPUT
          echo "isPR=$isPR" >> $env:GITHUB_OUTPUT

      - name: Ack
        uses: actions/github-script@v7
        with:
          script: |
            const body = `${{ steps.gate.outputs.body }}`;
            const isPR = `${{ steps.gate.outputs.isPR }}` === '1';
            // 1) 코맨드 인식 확인
            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
              body: `ack ✅ "${body}" (exec stable)`
            });
            // 2) PR이 아니면 안내 후 종료(실행은 스킵)
            if (!isPR) {
              await github.rest.issues.createComment({
                owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
                body: 'ℹ️ **/ak** 실제 실행은 PR 대화에서만 수행합니다. 현재는 Issue라 git/스크립트 실행을 스킵했어요.'
              });
              return;
            }

      - name: Checkout (PR only)
        if: steps.gate.outputs.isPR == '1'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve candidate
        id: cand
        shell: pwsh
        run: |
          $map = @{
            'scan'     = 'scripts\g5\ak-scan.ps1'
            'fix'      = 'scripts\g5\ak-fixloop.ps1'
            'test'     = 'scripts\g5\ak-test.ps1'
            'rewrite'  = 'scripts\g5\ak-rewrite.ps1'
            'dispatch' = 'scripts\g5\ak-dispatch.ps1'
          }
          $cmd='${{ steps.gate.outputs.cmd }}'
          $target = $map[$cmd]
          if (-not $target) { $target = 'scripts\g5\ak-scan.ps1' }
          echo "path=$target" >> $env:GITHUB_OUTPUT
          Write-Host "Candidate(s): $target"

      - name: Exec (PR only)
        if: steps.gate.outputs.isPR == '1'
        shell: pwsh
        run: |
          Write-Host "Running ${{ steps.cand.outputs.path }}"
          & "$env:GITHUB_WORKSPACE\${{ steps.cand.outputs.path }}"
        env:
          GIT_TERMINAL_PROMPT: '0'

      - name: Exec done (tail)
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
              body: '✅ exec done'
            })
