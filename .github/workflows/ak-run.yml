name: AK7 run (/ak only, robust)

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  ak:
    # /ak 로 시작하는 댓글만 반응
    if: startsWith(github.event.comment.body, '/ak ')
    runs-on: windows-latest

    steps:
      - name: Gate – detect context
        id: gate
        shell: pwsh
        run: |
          $body = '${{ github.event.comment.body }}'.Trim()
          $isAK = $body.StartsWith('/ak ')
          $isPR = [int]([bool]${{ github.event.issue.pull_request != null }})
          echo "body=$body" >> $env:GITHUB_OUTPUT
          echo "isAK=$([int]$isAK)" >> $env:GITHUB_OUTPUT
          echo "isPR=$isPR" >> $env:GITHUB_OUTPUT

      - name: Ack
        if: steps.gate.outputs.isAK == '1'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `${{ steps.gate.outputs.body }}`;
            const isPR = `${{ steps.gate.outputs.isPR }}` === '1';
            let msg = `ack ✅ "${body}"`;
            if (!isPR) msg += `\n\nℹ️ **/ak** 실행은 PR 대화에서만 동작합니다. 현재는 Issue라 git 실행을 스킵했어요.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: msg
            });

      # PR일 때만 체크아웃 (Issue에서는 git 관련 경고를 원천 차단)
      - name: Checkout (PR only)
        if: steps.gate.outputs.isPR == '1'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 요약 생성 (PR이 아니면 git 조회를 건너뜀)
      - name: Build summary
        id: sum
        if: always()
        shell: pwsh
        run: |
          $isPR = '${{ steps.gate.outputs.isPR }}'
          $head = '@ 0'
          if ($isPR -eq '1') {
            try { $head = (git rev-parse --short=8 HEAD) } catch {}
          }
          $summary = @"
          ## gate
          | key   | value |
          |-------|------:|
          | event | issue_comment |
          | isAK  | ${{ steps.gate.outputs.isAK }} |
          | issue | ${{ github.event.issue.number }} |
          | body  | ${{ steps.gate.outputs.body }} |

          ## pr
          | key  | value |
          |------|------:|
          | isPR | ${{ steps.gate.outputs.isPR }} |
          | head | $head |
          "@
          $p = Join-Path $env:RUNNER_TEMP 'xp-summary.md'
          $summary | Set-Content -LiteralPath $p -Encoding UTF8
          echo "file=$p" >> $env:GITHUB_OUTPUT
        env:
          GIT_TERMINAL_PROMPT: '0'

      - name: Upload summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xp-summary
          path: ${{ steps.sum.outputs.file }}
