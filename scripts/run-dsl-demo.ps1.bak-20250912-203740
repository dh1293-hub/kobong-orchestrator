#requires -PSEdition Core
#requires -Version 7.0
param(
  [string] $ResultFile
)
Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

function Get-GitRoot { try { git rev-parse --show-toplevel 2>$null } catch { $null } }

# env/paths
$ROOT = $env:HAN_GPT5_ROOT
if (-not $ROOT) { $ROOT = Get-GitRoot }
if (-not $ROOT) { $ROOT = (Resolve-Path "$PSScriptRoot/..").Path }
if (-not (Test-Path $ROOT)) { throw "Invalid root: $ROOT" }
$env:HAN_GPT5_ROOT = $ROOT

$OUTDIR = $env:HAN_GPT5_OUT
if (-not $OUTDIR) { $OUTDIR = Join-Path $ROOT "out" }

if (-not $ResultFile) { $ResultFile = Join-Path $OUTDIR "report_result.dsl.json" }
if (-not (Test-Path $ResultFile)) { throw "PRECONDITION: result JSON not found: $ResultFile" }

$res = Get-Content -LiteralPath $ResultFile -Raw -Encoding utf8 | ConvertFrom-Json

# 기본 필드 검증
if (-not ($res.title   -is [string]))   { throw "LOGIC: result.title invalid" }
if (-not ($res.format  -is [string]))   { throw "LOGIC: result.format invalid" }
if (-not ($res.columns -is [object[]])) { throw "LOGIC: result.columns invalid" }
# columns 모든 요소 문자열화 체크(느슨)
foreach ($c in $res.columns) { if ($null -eq $c) { throw "LOGIC: result.columns has null" } }

# rows: 배열 또는 정수 모두 허용
$rowsCount = $null
$rowsArr   = $null
if ($res.PSObject.Properties.Name -contains 'rows') {
  if ($res.rows -is [object[]]) { $rowsArr = @($res.rows); $rowsCount = $rowsArr.Count }
  elseif ($res.rows -is [int] -or $res.rows -is [long]) { $rowsCount = [int]$res.rows }
  else { throw "LOGIC: result.rows type unsupported" }
} else {
  throw "LOGIC: result.rows missing"
}

# 추가 산출물 검증(가능할 때만)
if ($res.PSObject.Properties.Name -contains 'json') {
  $jsonPath = [string]$res.json
  if ($jsonPath) {
    if (-not (Test-Path $jsonPath)) { throw "LOGIC: result.json path not found: $jsonPath" }
    # JSON 데이터 파일이 있다면 배열 형태인지 확인(느슨)
    try {
      $dat = Get-Content -LiteralPath $jsonPath -Raw -Encoding utf8 | ConvertFrom-Json
      if ($dat -is [object[]]) {
        if (-not $rowsArr) { $rowsArr = @($dat) }
        if (-not $rowsCount) { $rowsCount = $dat.Count }
      }
    } catch { }
  }
}
if ($res.PSObject.Properties.Name -contains 'csv') {
  $csvPath = [string]$res.csv
  if ($csvPath -and -not (Test-Path $csvPath)) { throw "LOGIC: result.csv path not found: $csvPath" }
}

# 최종 판정: 행 개수는 0 이상이어야 함
if ($null -eq $rowsCount -or $rowsCount -lt 0) { throw "LOGIC: result.rows invalid (no count)" }

Write-Host "[DEMO] OK —" `
  ("title={0} columns={1} rows={2} format={3}" -f $res.title, ($res.columns -join ','), $rowsCount, $res.format.ToUpperInvariant())
